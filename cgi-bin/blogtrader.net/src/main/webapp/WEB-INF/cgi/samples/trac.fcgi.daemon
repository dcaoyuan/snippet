#!/usr/bin/python2.4

try:
    import os
    import pkg_resources
    #import tempfile
    #sockaddr = '/tmp/trac-fastcgi.sock'
    sockaddr = ('127.0.0.1', 8000)
    if 'TRAC_ENV' not in os.environ and \
       'TRAC_ENV_PARENT_DIR' not in os.environ:
        os.environ['TRAC_ENV'] = '/data/releases/trac/projects/blogtrader'
    if 'PYTHON_EGG_CACHE' not in os.environ:
        if 'TRAC_ENV' in os.environ:
            egg_cache = os.path.join(os.environ['TRAC_ENV'], '.egg-cache')
        elif 'TRAC_ENV_PARENT_DIR' in os.environ:
            egg_cache = os.path.join(os.environ['TRAC_ENV_PARENT_DIR'], '.egg-cache')
        pkg_resources.set_extraction_path(egg_cache)
    if 'TRAC_BASE_URL' not in os.environ:
        os.environ['TRAC_BASE_URL'] = 'http://blogtrader.net/'
    from trac.web.main import dispatch_request
    import trac.web._fcgi
    """
        bindAddress, if present, must either be a string or a 2-tuple. If
        present, run() will open its own listening socket. You would use
        this if you wanted to run your application as an 'external' FastCGI
        app. (i.e. the webserver would no longer be responsible for starting
        your app) If a string, it will be interpreted as a filename and a UNIX
        socket will be opened. If a tuple, the first element, a string,
        is the interface name/IP to bind to, and the second element (an int)
        is the port number.
        exmple:
        fcgiserv = trac.web._fcgi.WSGIServer(dispatch_request, bindAddress = '/tmp/trac-fastcgi.sock', umask = 7)
        fcgiserv = trac.web._fcgi.WSGIServer(dispatch_request, bindAddress = ('127.0.0.1', 8000))
    """
    fcgiserv = trac.web._fcgi.WSGIServer(dispatch_request, bindAddress = sockaddr)
    fcgiserv.run()
except SystemExit:
    raise
except Exception, e:
    print 'Content-Type: text/plain\r\n\r\n',
    print 'Oops...'
    print
    print 'Trac detected an internal error:'
    print
    print e
    print
    import traceback
    import StringIO
    tb = StringIO.StringIO()
    traceback.print_exc(file=tb)
    print tb.getvalue()
